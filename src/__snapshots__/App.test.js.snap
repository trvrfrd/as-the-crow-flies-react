// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App basic rendering snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    loadAirports={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <header>
          <h1>
            As the Crow Flies
          </h1>
        </header>,
        <main>
          <div
            className="typeaheads"
          >
            <Typeahead
              formatSuggestion={[Function]}
              maxSuggestions={10}
              name="from"
              onSelect={[Function]}
              placeholder="IATA code, airport name, city, or state"
              source={Array []}
            />
            <Typeahead
              formatSuggestion={[Function]}
              maxSuggestions={10}
              name="to"
              onSelect={[Function]}
              placeholder="IATA code, airport name, city, or state"
              source={Array []}
            />
          </div>
        </main>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h1>
            As the Crow Flies
          </h1>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "As the Crow Flies",
          },
          "ref": null,
          "rendered": "As the Crow Flies",
          "type": "h1",
        },
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="typeaheads"
            >
              <Typeahead
                formatSuggestion={[Function]}
                maxSuggestions={10}
                name="from"
                onSelect={[Function]}
                placeholder="IATA code, airport name, city, or state"
                source={Array []}
              />
              <Typeahead
                formatSuggestion={[Function]}
                maxSuggestions={10}
                name="to"
                onSelect={[Function]}
                placeholder="IATA code, airport name, city, or state"
                source={Array []}
              />
            </div>,
            null,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Typeahead
                  formatSuggestion={[Function]}
                  maxSuggestions={10}
                  name="from"
                  onSelect={[Function]}
                  placeholder="IATA code, airport name, city, or state"
                  source={Array []}
                />,
                <Typeahead
                  formatSuggestion={[Function]}
                  maxSuggestions={10}
                  name="to"
                  onSelect={[Function]}
                  placeholder="IATA code, airport name, city, or state"
                  source={Array []}
                />,
              ],
              "className": "typeaheads",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "formatSuggestion": [Function],
                  "maxSuggestions": 10,
                  "name": "from",
                  "onSelect": [Function],
                  "placeholder": "IATA code, airport name, city, or state",
                  "source": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "formatSuggestion": [Function],
                  "maxSuggestions": 10,
                  "name": "to",
                  "onSelect": [Function],
                  "placeholder": "IATA code, airport name, city, or state",
                  "source": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          null,
        ],
        "type": "main",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <header>
            <h1>
              As the Crow Flies
            </h1>
          </header>,
          <main>
            <div
              className="typeaheads"
            >
              <Typeahead
                formatSuggestion={[Function]}
                maxSuggestions={10}
                name="from"
                onSelect={[Function]}
                placeholder="IATA code, airport name, city, or state"
                source={Array []}
              />
              <Typeahead
                formatSuggestion={[Function]}
                maxSuggestions={10}
                name="to"
                onSelect={[Function]}
                placeholder="IATA code, airport name, city, or state"
                source={Array []}
              />
            </div>
          </main>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1>
              As the Crow Flies
            </h1>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "As the Crow Flies",
            },
            "ref": null,
            "rendered": "As the Crow Flies",
            "type": "h1",
          },
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="typeaheads"
              >
                <Typeahead
                  formatSuggestion={[Function]}
                  maxSuggestions={10}
                  name="from"
                  onSelect={[Function]}
                  placeholder="IATA code, airport name, city, or state"
                  source={Array []}
                />
                <Typeahead
                  formatSuggestion={[Function]}
                  maxSuggestions={10}
                  name="to"
                  onSelect={[Function]}
                  placeholder="IATA code, airport name, city, or state"
                  source={Array []}
                />
              </div>,
              null,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Typeahead
                    formatSuggestion={[Function]}
                    maxSuggestions={10}
                    name="from"
                    onSelect={[Function]}
                    placeholder="IATA code, airport name, city, or state"
                    source={Array []}
                  />,
                  <Typeahead
                    formatSuggestion={[Function]}
                    maxSuggestions={10}
                    name="to"
                    onSelect={[Function]}
                    placeholder="IATA code, airport name, city, or state"
                    source={Array []}
                  />,
                ],
                "className": "typeaheads",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "formatSuggestion": [Function],
                    "maxSuggestions": 10,
                    "name": "from",
                    "onSelect": [Function],
                    "placeholder": "IATA code, airport name, city, or state",
                    "source": Array [],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "formatSuggestion": [Function],
                    "maxSuggestions": 10,
                    "name": "to",
                    "onSelect": [Function],
                    "placeholder": "IATA code, airport name, city, or state",
                    "source": Array [],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            null,
          ],
          "type": "main",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
